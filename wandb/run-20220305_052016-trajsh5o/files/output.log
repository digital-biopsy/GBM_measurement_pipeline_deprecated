
######################### Loading and Augmenting Images #########################
Process ForkPoolWorker-8:
Process ForkPoolWorker-17:
Process ForkPoolWorker-7:
Process ForkPoolWorker-5:
Process ForkPoolWorker-3:
Process ForkPoolWorker-9:
Process ForkPoolWorker-14:
Process ForkPoolWorker-6:
Process ForkPoolWorker-15:
Process ForkPoolWorker-10:
Process ForkPoolWorker-11:
Process ForkPoolWorker-4:
Process ForkPoolWorker-12:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 131, in worker
    put((job, i, result))
  File "/usr/lib/python3.8/multiprocessing/queues.py", line 367, in put
    with self._wlock:
  File "/usr/lib/python3.8/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 131, in worker
    put((job, i, result))
  File "/usr/lib/python3.8/multiprocessing/queues.py", line 367, in put
    with self._wlock:
  File "/usr/lib/python3.8/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 131, in worker
    put((job, i, result))
  File "/usr/lib/python3.8/multiprocessing/queues.py", line 367, in put
    with self._wlock:
  File "/usr/lib/python3.8/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 131, in worker
    put((job, i, result))
  File "/usr/lib/python3.8/multiprocessing/queues.py", line 367, in put
    with self._wlock:
  File "/usr/lib/python3.8/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
Process ForkPoolWorker-2:
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 131, in worker
    put((job, i, result))
  File "/usr/lib/python3.8/multiprocessing/queues.py", line 367, in put
    with self._wlock:
  File "/usr/lib/python3.8/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 131, in worker
    put((job, i, result))
  File "/usr/lib/python3.8/multiprocessing/queues.py", line 367, in put
    with self._wlock:
  File "/usr/lib/python3.8/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 131, in worker
    put((job, i, result))
  File "/usr/lib/python3.8/multiprocessing/queues.py", line 367, in put
    with self._wlock:
  File "/usr/lib/python3.8/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 51, in starmapstar
    return list(itertools.starmap(args[0], args[1]))
  File "/root/research/deep-segmentation/segmentation/unet/customdatasets3.py", line 67, in read_images
    inp, tar = pre_transform(inp, tar)
  File "/root/research/deep-segmentation/segmentation/unet/transformations.py", line 132, in __call__
    inp, target = t(inp, target)
  File "/root/research/deep-segmentation/segmentation/unet/transformations.py", line 113, in __call__
    if self.input: inp = self.function(inp)
  File "/usr/local/lib/python3.8/dist-packages/skimage/transform/_warps.py", line 187, in resize
    out = ndi.zoom(image, zoom_factors, order=order, mode=ndi_mode,
  File "/usr/local/lib/python3.8/dist-packages/scipy/ndimage/interpolation.py", line 817, in zoom
    _nd_image.zoom_shift(filtered, zoom, None, output, order, mode, cval, npad,
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 51, in starmapstar
    return list(itertools.starmap(args[0], args[1]))
  File "/root/research/deep-segmentation/segmentation/unet/customdatasets3.py", line 65, in read_images
    inp, tar = imread(str(inp)), imread(str(tar))
  File "/usr/local/lib/python3.8/dist-packages/skimage/io/_io.py", line 53, in imread
    img = call_plugin('imread', fname, plugin=plugin, **plugin_args)
  File "/usr/local/lib/python3.8/dist-packages/skimage/io/manage_plugins.py", line 207, in call_plugin
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/skimage/io/_plugins/imageio_plugin.py", line 10, in imread
    return np.asarray(imageio_imread(*args, **kwargs))
  File "/usr/local/lib/python3.8/dist-packages/imageio/__init__.py", line 86, in imread
    return imread_v2(uri, format=format, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/imageio/v2.py", line 160, in imread
    return file.read(index=0, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/imageio/core/legacy_plugin_wrapper.py", line 133, in read
    return reader.get_data(index)
  File "/usr/local/lib/python3.8/dist-packages/imageio/core/format.py", line 404, in get_data
    im, meta = self._get_data(index, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/imageio/plugins/pillow_legacy.py", line 397, in _get_data
    im, info = PillowFormat.Reader._get_data(self, index)
  File "/usr/local/lib/python3.8/dist-packages/imageio/plugins/pillow_legacy.py", line 345, in _get_data
    im = pil_get_frame(self._im, **self._kwargs)
  File "/usr/local/lib/python3.8/dist-packages/imageio/plugins/pillow_legacy.py", line 782, in pil_get_frame
    frame = np.array(frame, dtype=dtype)
  File "/usr/local/lib/python3.8/dist-packages/PIL/Image.py", line 677, in __array__
    return np.array(self._ArrayData(new), dtype)
Traceback (most recent call last):
KeyboardInterrupt
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 51, in starmapstar
    return list(itertools.starmap(args[0], args[1]))
  File "/root/research/deep-segmentation/segmentation/unet/customdatasets3.py", line 65, in read_images
    inp, tar = imread(str(inp)), imread(str(tar))
  File "/usr/local/lib/python3.8/dist-packages/skimage/io/_io.py", line 53, in imread
    img = call_plugin('imread', fname, plugin=plugin, **plugin_args)
  File "/usr/local/lib/python3.8/dist-packages/skimage/io/manage_plugins.py", line 207, in call_plugin
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/skimage/io/_plugins/imageio_plugin.py", line 10, in imread
    return np.asarray(imageio_imread(*args, **kwargs))
  File "/usr/local/lib/python3.8/dist-packages/imageio/__init__.py", line 86, in imread
    return imread_v2(uri, format=format, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/imageio/v2.py", line 160, in imread
    return file.read(index=0, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/imageio/core/legacy_plugin_wrapper.py", line 132, in read
    reader = self.legacy_get_reader(**kwargs)
  File "/usr/local/lib/python3.8/dist-packages/imageio/core/legacy_plugin_wrapper.py", line 104, in legacy_get_reader
    return self._format.get_reader(self._request)
  File "/usr/local/lib/python3.8/dist-packages/imageio/core/format.py", line 190, in get_reader
    return self.Reader(self, request)
  File "/usr/local/lib/python3.8/dist-packages/imageio/core/format.py", line 281, in __init__
    self._open(**self.request.kwargs.copy())
  File "/usr/local/lib/python3.8/dist-packages/imageio/plugins/pillow_legacy.py", line 394, in _open
    return PillowFormat.Reader._open(self, pilmode=pilmode, as_gray=as_gray)
  File "/usr/local/lib/python3.8/dist-packages/imageio/plugins/pillow_legacy.py", line 300, in _open
    pil_try_read(self._im)
  File "/usr/local/lib/python3.8/dist-packages/imageio/plugins/pillow_legacy.py", line 654, in pil_try_read
    im.getdata()[0]
  File "/usr/local/lib/python3.8/dist-packages/PIL/Image.py", line 1294, in getdata
    self.load()
  File "/usr/local/lib/python3.8/dist-packages/PIL/ImageFile.py", line 253, in load
    n, err_code = decoder.decode(b)
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 131, in worker
    put((job, i, result))
  File "/usr/lib/python3.8/multiprocessing/queues.py", line 368, in put
    self._writer.send_bytes(obj)
  File "/usr/lib/python3.8/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.8/multiprocessing/connection.py", line 405, in _send_bytes
    self._send(buf)
  File "/usr/lib/python3.8/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
KeyboardInterrupt
Process ForkPoolWorker-13:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 51, in starmapstar
    return list(itertools.starmap(args[0], args[1]))
  File "/root/research/deep-segmentation/segmentation/unet/customdatasets3.py", line 67, in read_images
    inp, tar = pre_transform(inp, tar)
  File "/root/research/deep-segmentation/segmentation/unet/transformations.py", line 132, in __call__
    inp, target = t(inp, target)
  File "/root/research/deep-segmentation/segmentation/unet/transformations.py", line 113, in __call__
    if self.input: inp = self.function(inp)
  File "/usr/local/lib/python3.8/dist-packages/skimage/transform/_warps.py", line 187, in resize
    out = ndi.zoom(image, zoom_factors, order=order, mode=ndi_mode,
  File "/usr/local/lib/python3.8/dist-packages/scipy/ndimage/interpolation.py", line 817, in zoom
    _nd_image.zoom_shift(filtered, zoom, None, output, order, mode, cval, npad,
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 131, in worker
    put((job, i, result))
  File "/usr/lib/python3.8/multiprocessing/queues.py", line 367, in put
    with self._wlock:
  File "/usr/lib/python3.8/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Process ForkPoolWorker-16:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 51, in starmapstar
    return list(itertools.starmap(args[0], args[1]))
  File "/root/research/deep-segmentation/segmentation/unet/customdatasets3.py", line 67, in read_images
    inp, tar = pre_transform(inp, tar)
  File "/root/research/deep-segmentation/segmentation/unet/transformations.py", line 132, in __call__
    inp, target = t(inp, target)
  File "/root/research/deep-segmentation/segmentation/unet/transformations.py", line 113, in __call__
    if self.input: inp = self.function(inp)
  File "/usr/local/lib/python3.8/dist-packages/skimage/transform/_warps.py", line 187, in resize
    out = ndi.zoom(image, zoom_factors, order=order, mode=ndi_mode,
  File "/usr/local/lib/python3.8/dist-packages/scipy/ndimage/interpolation.py", line 817, in zoom
    _nd_image.zoom_shift(filtered, zoom, None, output, order, mode, cval, npad,
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 131, in worker
    put((job, i, result))
  File "/usr/lib/python3.8/multiprocessing/queues.py", line 367, in put
    with self._wlock:
  File "/usr/lib/python3.8/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 51, in starmapstar
    return list(itertools.starmap(args[0], args[1]))
  File "/root/research/deep-segmentation/segmentation/unet/customdatasets3.py", line 67, in read_images
    inp, tar = pre_transform(inp, tar)
  File "/root/research/deep-segmentation/segmentation/unet/transformations.py", line 132, in __call__
    inp, target = t(inp, target)
  File "/root/research/deep-segmentation/segmentation/unet/transformations.py", line 114, in __call__
    if self.target: tar = self.function(tar)
  File "/usr/local/lib/python3.8/dist-packages/skimage/transform/_warps.py", line 187, in resize
    out = ndi.zoom(image, zoom_factors, order=order, mode=ndi_mode,
  File "/usr/local/lib/python3.8/dist-packages/scipy/ndimage/interpolation.py", line 817, in zoom
    _nd_image.zoom_shift(filtered, zoom, None, output, order, mode, cval, npad,
KeyboardInterrupt
Traceback (most recent call last):
  File "/root/research/deep-segmentation/segmentation/unet/customdatasets3.py", line 37, in __init__
    self.cached_data = pool.starmap(self.read_images, zip(inputs, targets, repeat(self.pre_transform)))
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 372, in starmap
    return self._map_async(func, iterable, starmapstar, chunksize).get()
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 765, in get
    self.wait(timeout)
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 762, in wait
    self._event.wait(timeout)
  File "/usr/lib/python3.8/threading.py", line 558, in wait
    signaled = self._cond.wait(timeout)
  File "/usr/lib/python3.8/threading.py", line 302, in wait
    waiter.acquire()
KeyboardInterrupt
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "main.py", line 92, in <module>
    train_model(args.verbose)
  File "main.py", line 76, in train_model
    init_and_train_model(verbose)
  File "main.py", line 61, in init_and_train_model
    DeepSeg.load_and_augment()
  File "/root/research/deep-segmentation/segmentation/unet/segmentation.py", line 151, in load_and_augment
    dataset_train = SegmentationDataSet3(
  File "/root/research/deep-segmentation/segmentation/unet/customdatasets3.py", line 37, in __init__
    self.cached_data = pool.starmap(self.read_images, zip(inputs, targets, repeat(self.pre_transform)))
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 736, in __exit__
    self.terminate()
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 654, in terminate
    self._terminate()
  File "/usr/lib/python3.8/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/usr/lib/python3.8/multiprocessing/pool.py", line 700, in _terminate_pool
    outqueue.put(None)                  # sentinel
  File "/usr/lib/python3.8/multiprocessing/queues.py", line 367, in put
    with self._wlock:
  File "/usr/lib/python3.8/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt