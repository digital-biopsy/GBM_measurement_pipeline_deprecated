
######################### Loading and Augmenting Images #########################
Progress:   0%|                                                                                                                           | 0/40 [00:00<?, ?it/s]
Training:   0%|                                                                                                                          | 0/912 [00:00<?, ?it/s]
######################### Start Training #########################
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
  return torch.max_pool2d(input, kernel_size, stride, padding, dilation, ceil_mode)                                                      | 0/912 [00:00<?, ?it/s]
/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:1805: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
Training: (loss 0.4873):   2%|█▊                                                                                                | 17/912 [00:01<01:26, 10.30it/s]
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])

Training: (loss 0.4709):   4%|███▉                                                                                              | 37/912 [00:03<01:15, 11.66it/s]
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])

Training: (loss 0.4529):   6%|██████▎                                                                                           | 59/912 [00:05<01:25,  9.98it/s]
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])

Training: (loss 0.4199):   9%|████████▋                                                                                         | 81/912 [00:07<01:15, 10.98it/s]
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
torch.Size([1, 512, 512])
torch.Size([1, 1, 512, 512])
Traceback (most recent call last):
  File "main.py", line 92, in <module>
    init_and_train_model(args.verbose)
  File "main.py", line 63, in init_and_train_model
    DeepSeg.train_model()
  File "/root/research/deep-segmentation/segmentation/unet/segmentation.py", line 244, in train_model
    training_losses, validation_losses, lr_rates = trainer.run_trainer()
  File "/root/research/deep-segmentation/segmentation/unet/trainer.py", line 59, in run_trainer
    self._train()
  File "/root/research/deep-segmentation/segmentation/unet/trainer.py", line 93, in _train
    loss.backward()  # one backward pass
  File "/usr/local/lib/python3.8/dist-packages/torch/_tensor.py", line 255, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/usr/local/lib/python3.8/dist-packages/torch/autograd/__init__.py", line 147, in backward
    Variable._execution_engine.run_backward(
KeyboardInterrupt