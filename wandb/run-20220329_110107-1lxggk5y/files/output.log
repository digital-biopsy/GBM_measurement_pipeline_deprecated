torch.Size([8, 512, 512])
torch.Size([8, 2, 512, 512])
Progress:   0%|                                                                                                                           | 0/90 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "main.py", line 132, in <module>
    init_and_train_model(args.verbose)
  File "main.py", line 81, in init_and_train_model
    DeepSeg.train_model()
  File "/root/research/deep-segmentation/segmentation/unet/segmentation.py", line 242, in train_model
    training_losses, validation_losses, lr_rates = trainer.run_trainer()
  File "/root/research/deep-segmentation/segmentation/unet/trainer.py", line 59, in run_trainer
    self._train()
  File "/root/research/deep-segmentation/segmentation/unet/trainer.py", line 97, in _train
    loss = self.criterion(out, target)  # calculate loss
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/research/deep-segmentation/segmentation/unet/loss.py", line 23, in forward
    intersection = (inputs * targets).sum()
RuntimeError: The size of tensor a (4194304) must match the size of tensor b (2097152) at non-singleton dimension 0