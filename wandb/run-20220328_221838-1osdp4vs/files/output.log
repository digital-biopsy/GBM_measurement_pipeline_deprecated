
######################### Loading and Augmenting Images #########################
/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:718: UserWarning: Named tensors and all their associated APIs are an experimental feature and subject to change. Please do not use them for anything important until they are released as stable. (Triggered internally at  /pytorch/c10/core/TensorImpl.h:1156.)
  return torch.max_pool2d(input, kernel_size, stride, padding, dilation, ceil_mode)
Progress:   0%|                                                                                                                           | 0/90 [00:00<?, ?it/s]
Training: (loss 0.8251):   9%|█████████                                                                                           | 5/55 [00:01<00:17,  2.88it/s]
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv2d-1         [-1, 32, 512, 512]             320
              ReLU-2         [-1, 32, 512, 512]               0
       BatchNorm2d-3         [-1, 32, 512, 512]              64
            Conv2d-4         [-1, 32, 512, 512]           9,248
              ReLU-5         [-1, 32, 512, 512]               0
       BatchNorm2d-6         [-1, 32, 512, 512]              64
         MaxPool2d-7         [-1, 32, 256, 256]               0
         DownBlock-8  [[-1, 32, 256, 256], [-1, 32, 512, 512]]               0
            Conv2d-9         [-1, 64, 256, 256]          18,496
             ReLU-10         [-1, 64, 256, 256]               0
      BatchNorm2d-11         [-1, 64, 256, 256]             128
           Conv2d-12         [-1, 64, 256, 256]          36,928
             ReLU-13         [-1, 64, 256, 256]               0
      BatchNorm2d-14         [-1, 64, 256, 256]             128
        MaxPool2d-15         [-1, 64, 128, 128]               0
        DownBlock-16  [[-1, 64, 128, 128], [-1, 64, 256, 256]]               0
           Conv2d-17        [-1, 128, 128, 128]          73,856
             ReLU-18        [-1, 128, 128, 128]               0
      BatchNorm2d-19        [-1, 128, 128, 128]             256
           Conv2d-20        [-1, 128, 128, 128]         147,584
             ReLU-21        [-1, 128, 128, 128]               0
      BatchNorm2d-22        [-1, 128, 128, 128]             256
        MaxPool2d-23          [-1, 128, 64, 64]               0
        DownBlock-24  [[-1, 128, 64, 64], [-1, 128, 128, 128]]               0
           Conv2d-25          [-1, 256, 64, 64]         295,168
             ReLU-26          [-1, 256, 64, 64]               0
      BatchNorm2d-27          [-1, 256, 64, 64]             512
           Conv2d-28          [-1, 256, 64, 64]         590,080
             ReLU-29          [-1, 256, 64, 64]               0
      BatchNorm2d-30          [-1, 256, 64, 64]             512
        DownBlock-31  [[-1, 256, 64, 64], [-1, 256, 64, 64]]               0
  ConvTranspose2d-32        [-1, 128, 128, 128]         131,200
             ReLU-33        [-1, 128, 128, 128]               0
      BatchNorm2d-34        [-1, 128, 128, 128]             256
      Concatenate-35        [-1, 256, 128, 128]               0
           Conv2d-36        [-1, 128, 128, 128]         295,040
             ReLU-37        [-1, 128, 128, 128]               0
      BatchNorm2d-38        [-1, 128, 128, 128]             256
           Conv2d-39        [-1, 128, 128, 128]         147,584
             ReLU-40        [-1, 128, 128, 128]               0
      BatchNorm2d-41        [-1, 128, 128, 128]             256
          UpBlock-42        [-1, 128, 128, 128]               0
  ConvTranspose2d-43         [-1, 64, 256, 256]          32,832
             ReLU-44         [-1, 64, 256, 256]               0
      BatchNorm2d-45         [-1, 64, 256, 256]             128
      Concatenate-46        [-1, 128, 256, 256]               0
           Conv2d-47         [-1, 64, 256, 256]          73,792
             ReLU-48         [-1, 64, 256, 256]               0
      BatchNorm2d-49         [-1, 64, 256, 256]             128
           Conv2d-50         [-1, 64, 256, 256]          36,928
             ReLU-51         [-1, 64, 256, 256]               0
      BatchNorm2d-52         [-1, 64, 256, 256]             128
          UpBlock-53         [-1, 64, 256, 256]               0
  ConvTranspose2d-54         [-1, 32, 512, 512]           8,224
             ReLU-55         [-1, 32, 512, 512]               0
      BatchNorm2d-56         [-1, 32, 512, 512]              64
      Concatenate-57         [-1, 64, 512, 512]               0
           Conv2d-58         [-1, 32, 512, 512]          18,464
             ReLU-59         [-1, 32, 512, 512]               0
      BatchNorm2d-60         [-1, 32, 512, 512]              64
           Conv2d-61         [-1, 32, 512, 512]           9,248
             ReLU-62         [-1, 32, 512, 512]               0
      BatchNorm2d-63         [-1, 32, 512, 512]              64
          UpBlock-64         [-1, 32, 512, 512]               0
           Conv2d-65          [-1, 2, 512, 512]              66
================================================================
Total params: 1,928,322
Trainable params: 1,928,322
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 1.00
Forward/backward pass size (MB): 184547280.00
Params size (MB): 7.36
Estimated Total Size (MB): 184547288.36
----------------------------------------------------------------
######################### Start Training #########################
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.8157):  15%|██████████████▌                                                                                     | 8/55 [00:03<00:27,  1.74it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.7702):  25%|█████████████████████████▏                                                                         | 14/55 [00:05<00:15,  2.71it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.7031):  36%|████████████████████████████████████                                                               | 20/55 [00:07<00:11,  2.92it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.7047):  44%|███████████████████████████████████████████▏                                                       | 24/55 [00:09<00:11,  2.75it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.6508):  51%|██████████████████████████████████████████████████▍                                                | 28/55 [00:11<00:12,  2.11it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.6400):  62%|█████████████████████████████████████████████████████████████▏                                     | 34/55 [00:13<00:07,  2.82it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.6473):  71%|██████████████████████████████████████████████████████████████████████▏                            | 39/55 [00:15<00:05,  2.92it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.5936):  78%|█████████████████████████████████████████████████████████████████████████████▍                     | 43/55 [00:17<00:05,  2.10it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.5561):  87%|██████████████████████████████████████████████████████████████████████████████████████▍            | 48/55 [00:19<00:02,  2.39it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.6036):  98%|█████████████████████████████████████████████████████████████████████████████████████████████████▏ | 54/55 [00:21<00:00,  2.86it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([9, 2, 512, 512])







Training: (loss 0.5384):   7%|███████▎                                                                                            | 4/55 [00:01<00:17,  2.98it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.5540):  18%|██████████████████                                                                                 | 10/55 [00:03<00:15,  2.95it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.5296):  25%|█████████████████████████▏                                                                         | 14/55 [00:04<00:13,  2.96it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.5281):  33%|████████████████████████████████▍                                                                  | 18/55 [00:07<00:18,  2.00it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.5300):  44%|███████████████████████████████████████████▏                                                       | 24/55 [00:09<00:11,  2.80it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.5575):  55%|█████████████████████████████████████████████████████▉                                             | 30/55 [00:11<00:08,  2.93it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.5688):  64%|███████████████████████████████████████████████████████████████                                    | 35/55 [00:13<00:08,  2.37it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4911):  73%|████████████████████████████████████████████████████████████████████████                           | 40/55 [00:15<00:05,  2.59it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.5641):  84%|██████████████████████████████████████████████████████████████████████████████████▊                | 46/55 [00:17<00:03,  2.90it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.5195):  95%|█████████████████████████████████████████████████████████████████████████████████████████████▌     | 52/55 [00:19<00:01,  2.94it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4567):  98%|█████████████████████████████████████████████████████████████████████████████████████████████████▏ | 54/55 [00:20<00:00,  2.28it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([9, 2, 512, 512])






Training: (loss 0.4773):   2%|█▊                                                                                                  | 1/55 [00:00<00:17,  3.17it/s]
torch.Size([16, 2, 512, 512])

Training: (loss 0.4839):   9%|█████████                                                                                           | 5/55 [00:01<00:16,  2.97it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.5121):  16%|████████████████▎                                                                                   | 9/55 [00:04<00:25,  1.79it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4674):  27%|██████████████████████████▉                                                                        | 15/55 [00:06<00:14,  2.75it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4817):  38%|█████████████████████████████████████▊                                                             | 21/55 [00:08<00:11,  2.92it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4396):  45%|█████████████████████████████████████████████                                                      | 25/55 [00:10<00:14,  2.10it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4194):  53%|████████████████████████████████████████████████████▏                                              | 29/55 [00:12<00:11,  2.30it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4844):  64%|███████████████████████████████████████████████████████████████                                    | 35/55 [00:14<00:07,  2.85it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4886):  73%|████████████████████████████████████████████████████████████████████████                           | 40/55 [00:16<00:05,  2.90it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4995):  80%|███████████████████████████████████████████████████████████████████████████████▏                   | 44/55 [00:17<00:04,  2.33it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4235):  89%|████████████████████████████████████████████████████████████████████████████████████████▏          | 49/55 [00:20<00:02,  2.58it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Validation:   0%|                                                                                                                         | 0/14 [00:00<?, ?it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([9, 2, 512, 512])






Training: (loss 0.4306):   4%|███▋                                                                                                | 2/55 [00:00<00:17,  3.04it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4445):  15%|██████████████▌                                                                                     | 8/55 [00:02<00:15,  2.96it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4148):  25%|█████████████████████████▏                                                                         | 14/55 [00:04<00:13,  2.95it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4442):  33%|████████████████████████████████▍                                                                  | 18/55 [00:06<00:16,  2.28it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4507):  42%|█████████████████████████████████████████▍                                                         | 23/55 [00:08<00:12,  2.56it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4361):  53%|████████████████████████████████████████████████████▏                                              | 29/55 [00:10<00:09,  2.89it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4226):  62%|█████████████████████████████████████████████████████████████▏                                     | 34/55 [00:12<00:07,  2.93it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4617):  67%|██████████████████████████████████████████████████████████████████▌                                | 37/55 [00:14<00:10,  1.71it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4373):  78%|█████████████████████████████████████████████████████████████████████████████▍                     | 43/55 [00:16<00:04,  2.70it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4491):  89%|████████████████████████████████████████████████████████████████████████████████████████▏          | 49/55 [00:18<00:02,  2.91it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Validation:   0%|                                                                                                                         | 0/14 [00:00<?, ?it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([9, 2, 512, 512])






Training: (loss 0.4150):   5%|█████▍                                                                                              | 3/55 [00:00<00:17,  3.01it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4543):  16%|████████████████▎                                                                                   | 9/55 [00:03<00:15,  2.95it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4023):  27%|██████████████████████████▉                                                                        | 15/55 [00:05<00:13,  2.94it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4689):  35%|██████████████████████████████████▏                                                                | 19/55 [00:06<00:12,  2.94it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4431):  42%|█████████████████████████████████████████▍                                                         | 23/55 [00:09<00:17,  1.88it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4064):  53%|████████████████████████████████████████████████████▏                                              | 29/55 [00:11<00:09,  2.76it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4012):  64%|███████████████████████████████████████████████████████████████                                    | 35/55 [00:13<00:06,  2.92it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4145):  71%|██████████████████████████████████████████████████████████████████████▏                            | 39/55 [00:14<00:07,  2.05it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.3847):  78%|█████████████████████████████████████████████████████████████████████████████▍                     | 43/55 [00:16<00:05,  2.21it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.3727):  87%|██████████████████████████████████████████████████████████████████████████████████████▍            | 48/55 [00:18<00:02,  2.79it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.3792):  98%|█████████████████████████████████████████████████████████████████████████████████████████████████▏ | 54/55 [00:20<00:00,  2.92it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([9, 2, 512, 512])






Training: (loss 0.4041):   2%|█▊                                                                                                  | 1/55 [00:00<00:16,  3.35it/s]
torch.Size([16, 2, 512, 512])

Training: (loss 0.4203):  13%|████████████▋                                                                                       | 7/55 [00:02<00:16,  2.95it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4167):  20%|███████████████████▊                                                                               | 11/55 [00:04<00:22,  1.95it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4193):  27%|██████████████████████████▉                                                                        | 15/55 [00:06<00:18,  2.16it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.3952):  38%|█████████████████████████████████████▊                                                             | 21/55 [00:08<00:12,  2.82it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4224):  49%|████████████████████████████████████████████████▌                                                  | 27/55 [00:10<00:09,  2.81it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.3915):  55%|█████████████████████████████████████████████████████▉                                             | 30/55 [00:12<00:12,  1.98it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4044):  64%|███████████████████████████████████████████████████████████████                                    | 35/55 [00:14<00:08,  2.50it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.3528):  75%|█████████████████████████████████████████████████████████████████████████▊                         | 41/55 [00:16<00:04,  2.85it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.3790):  85%|████████████████████████████████████████████████████████████████████████████████████▌              | 47/55 [00:18<00:02,  2.93it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.3719):  96%|███████████████████████████████████████████████████████████████████████████████████████████████▍   | 53/55 [00:20<00:00,  2.94it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Validation: (loss 0.4030):   7%|███████                                                                                           | 1/14 [00:00<00:10,  1.26it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([9, 2, 512, 512])






Training: (loss 0.3418):   9%|█████████                                                                                           | 5/55 [00:01<00:16,  2.97it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4017):  20%|███████████████████▊                                                                               | 11/55 [00:03<00:14,  2.95it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.3791):  29%|████████████████████████████▊                                                                      | 16/55 [00:05<00:13,  2.94it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.3680):  36%|████████████████████████████████████                                                               | 20/55 [00:07<00:17,  2.04it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4019):  47%|██████████████████████████████████████████████▊                                                    | 26/55 [00:09<00:10,  2.77it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.3470):  56%|███████████████████████████████████████████████████████▊                                           | 31/55 [00:11<00:08,  2.87it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4145):  65%|████████████████████████████████████████████████████████████████▊                                  | 36/55 [00:13<00:09,  1.96it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.3147):  73%|████████████████████████████████████████████████████████████████████████                           | 40/55 [00:15<00:06,  2.17it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.3641):  84%|██████████████████████████████████████████████████████████████████████████████████▊                | 46/55 [00:17<00:03,  2.83it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.3495):  91%|██████████████████████████████████████████████████████████████████████████████████████████         | 50/55 [00:19<00:01,  2.91it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Validation:   0%|                                                                                                                         | 0/14 [00:00<?, ?it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([9, 2, 512, 512])






Training: (loss 0.4022):   2%|█▊                                                                                                  | 1/55 [00:00<00:16,  3.20it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.3314):  11%|██████████▉                                                                                         | 6/55 [00:02<00:22,  2.20it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.3529):  22%|█████████████████████▌                                                                             | 12/55 [00:04<00:15,  2.84it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.3241):  33%|████████████████████████████████▍                                                                  | 18/55 [00:07<00:12,  2.94it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.3255):  40%|███████████████████████████████████████▌                                                           | 22/55 [00:08<00:15,  2.20it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])

Training: (loss 0.4050):  47%|██████████████████████████████████████████████▊                                                    | 26/55 [00:10<00:12,  2.35it/s]
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
Traceback (most recent call last):
  File "main.py", line 111, in <module>
    init_and_train_model(args.verbose)
  File "main.py", line 79, in init_and_train_model
    DeepSeg.train_model()
  File "/root/research/deep-segmentation/segmentation/unet/segmentation.py", line 235, in train_model
    training_losses, validation_losses, lr_rates = trainer.run_trainer()
  File "/root/research/deep-segmentation/segmentation/unet/trainer.py", line 58, in run_trainer
    self._train()
  File "/root/research/deep-segmentation/segmentation/unet/trainer.py", line 112, in _train
    loss.backward()  # one backward pass
  File "/usr/local/lib/python3.8/dist-packages/torch/_tensor.py", line 255, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/usr/local/lib/python3.8/dist-packages/torch/autograd/__init__.py", line 147, in backward
    Variable._execution_engine.run_backward(
KeyboardInterrupt
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])
torch.Size([16, 2, 512, 512])
torch.Size([2, 512, 512])