Out unique tensor([2.3470e-05, 3.8493e-05, 8.0320e-05,  ..., 1.0000e+00, 1.0000e+00,
        1.0000e+00], device='cuda:0', grad_fn=<Unique2Backward>)
Label unique tensor([0, 1], device='cuda:0')
[34m[1mwandb[39m[22m: [33mWARNING[39m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
Progress:   0%|                                                                                                           | 0/15 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "main.py", line 162, in <module>
    ask_if_proceed(callback, arg)
  File "main.py", line 134, in ask_if_proceed
    if (arg is not None): callback(arg)
  File "main.py", line 100, in init_and_train_model
    train_model(DeepSeg, save_dir)
  File "main.py", line 94, in train_model
    DeepSeg.train_model()
  File "/root/research/deep-segmentation/segmentation/unet/unet_seg.py", line 250, in train_model
    training_losses, validation_losses, lr_rates = trainer.run_trainer()
  File "/root/research/deep-segmentation/segmentation/unet/trainer.py", line 62, in run_trainer
    self._train()
  File "/root/research/deep-segmentation/segmentation/unet/trainer.py", line 100, in _train
    print('Out mean', np.mean(out))
  File "<__array_function__ internals>", line 5, in mean
  File "/usr/local/lib/python3.8/dist-packages/numpy/core/fromnumeric.py", line 3417, in mean
    return mean(axis=axis, dtype=dtype, out=out, **kwargs)
TypeError: mean() received an invalid combination of arguments - got (out=NoneType, axis=NoneType, dtype=NoneType, ), but expected one of:
 * (*, torch.dtype dtype)
 * (tuple of ints dim, bool keepdim, *, torch.dtype dtype)
 * (tuple of names dim, bool keepdim, *, torch.dtype dtype)