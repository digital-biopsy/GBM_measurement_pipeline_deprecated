Progress:   0%|                                                                                              | 0/90 [00:00<?, ?it/s]



















































































































































































































































Progress:   6%|████▋                                                                               | 5/90 [08:12<2:20:05, 98.89s/it]




























Traceback (most recent call last):
  File "main.py", line 146, in <module>
    init_and_train_model(args.verbose)
  File "main.py", line 106, in init_and_train_model
    DeepSeg.train_model()
  File "/root/research/deep-segmentation/segmentation/segmentation.py", line 249, in train_model
    training_losses, validation_losses, lr_rates = trainer.run_trainer()
  File "/root/research/deep-segmentation/segmentation/trainer.py", line 59, in run_trainer
    self._train()
  File "/root/research/deep-segmentation/segmentation/trainer.py", line 89, in _train
    for i, (x, y) in batch_iter:
  File "/usr/local/lib/python3.8/dist-packages/tqdm/std.py", line 1180, in __iter__
    for obj in iterable:
  File "/usr/local/lib/python3.8/dist-packages/torch/utils/data/dataloader.py", line 521, in __next__
    data = self._next_data()
  File "/usr/local/lib/python3.8/dist-packages/torch/utils/data/dataloader.py", line 561, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/usr/local/lib/python3.8/dist-packages/torch/utils/data/_utils/fetch.py", line 44, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/usr/local/lib/python3.8/dist-packages/torch/utils/data/_utils/fetch.py", line 44, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/root/research/deep-segmentation/segmentation/customdatasets3.py", line 56, in __getitem__
    x, y = self.transform(x, y)
  File "/root/research/deep-segmentation/segmentation/transformations.py", line 132, in __call__
    inp, target = t(inp, target)
  File "/root/research/deep-segmentation/segmentation/transformations.py", line 158, in __call__
    out_dict = self.albumentation(image=inp, mask=tar)
  File "/usr/local/lib/python3.8/dist-packages/albumentations/core/transforms_interface.py", line 97, in __call__
    return self.apply_with_params(params, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/albumentations/core/transforms_interface.py", line 112, in apply_with_params
    res[key] = target_function(arg, **dict(params, **target_dependencies))
  File "/usr/local/lib/python3.8/dist-packages/albumentations/augmentations/transforms.py", line 309, in apply
    return F.hflip(img)
  File "/usr/local/lib/python3.8/dist-packages/albumentations/augmentations/functional.py", line 110, in hflip
    return np.ascontiguousarray(img[:, ::-1, ...])
  File "/usr/local/lib/python3.8/dist-packages/numpy/core/_asarray.py", line 228, in ascontiguousarray
    return array(a, dtype, copy=False, order='C', ndmin=1)
KeyboardInterrupt