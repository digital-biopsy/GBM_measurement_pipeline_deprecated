
######################### Loading and Augmenting Images #########################
######################### Start Training #########################
tensor([[[[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          ...,
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],
         [[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          ...,
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]]]], device='cuda:0')
tensor([[[[ 0.3195,  1.2988, -2.2513,  ...,  0.0382,  0.7374,  1.4888],
          [ 1.9867, -0.3253, -1.9698,  ...,  1.3640,  1.0407, -1.5621],
          [ 2.6243,  0.9703,  1.5632,  ..., -2.1791, -0.0065, -1.3725],
          ...,
          [ 2.6792, -0.4406, -4.3887,  ...,  1.1581, -1.0434, -0.9435],
          [ 3.3874, -1.4412, -5.2860,  ...,  0.6250,  1.1834, -3.2253],
          [ 3.3017, -2.0811, -2.3309,  ...,  2.2885,  1.3653, -1.9733]],
         [[-1.4463, -0.3915,  1.3903,  ...,  0.4427,  2.0622,  1.5073],
          [-3.1820, -0.3167, -1.0245,  ..., -2.2355,  0.0667, -0.0592],
          [ 1.4353,  0.5216,  0.6096,  ...,  1.8603, -0.9701,  0.3710],
          ...,
          [ 0.2792,  1.9547,  0.6881,  ...,  0.1434,  1.8497, -0.5441],
          [-1.5494,  1.9000, -0.3743,  ...,  1.0103, -1.0117,  0.5853],
          [-0.2740,  2.5599,  0.4412,  ...,  2.8681,  1.5135,  1.1391]]]],
       device='cuda:0', grad_fn=<AddBackward0>)
tensor([[[1, 1, 1,  ..., 1, 1, 1],
         [1, 1, 1,  ..., 1, 1, 1],
         [1, 1, 1,  ..., 1, 1, 1],
         ...,
         [1, 1, 1,  ..., 1, 1, 1],
         [1, 1, 1,  ..., 1, 1, 1],
         [1, 1, 1,  ..., 1, 1, 1]]], device='cuda:0')
Progress:   0%|                                                                                                                           | 0/40 [00:00<?, ?it/s]/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:718: UserWarning: Named tensors and all their associated APIs are an experimental feature and subject to change. Please do not use them for anything important until they are released as stable. (Triggered internally at  /pytorch/c10/core/TensorImpl.h:1156.)
  return torch.max_pool2d(input, kernel_size, stride, padding, dilation, ceil_mode)                                                      | 0/912 [00:00<?, ?it/s]
Progress:   0%|                                                                                                                           | 0/40 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "main.py", line 71, in <module>
    train_model(
  File "main.py", line 57, in train_model
    DeepSeg.train_model()
  File "/root/research/deep-segmentation/segmentation/unet/segmentation.py", line 238, in train_model
    training_losses, validation_losses, lr_rates = trainer.run_trainer()
  File "/root/research/deep-segmentation/segmentation/unet/trainer.py", line 58, in run_trainer
    self._train()
  File "/root/research/deep-segmentation/segmentation/unet/trainer.py", line 89, in _train
    self.focalTverskyLoss(out, target)
  File "/root/research/deep-segmentation/segmentation/unet/trainer.py", line 111, in focalTverskyLoss
    true_pos = np.count_nonzero(true_mat&target)
RuntimeError: result type Long can't be cast to the desired output type Bool