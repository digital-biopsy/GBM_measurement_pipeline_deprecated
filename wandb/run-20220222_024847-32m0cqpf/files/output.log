
#########################Loading and Augmenting Images#########################
x = shape: torch.Size([1, 1, 512, 512]); type: torch.float32
x = min: 0.0; max: 1.0
y = shape: torch.Size([1, 512, 512]); class: tensor([0]); type: torch.int64
/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py:718: UserWarning: Named tensors and all their associated APIs are an experimental feature and subject to change. Please do not use them for anything important until they are released as stable. (Triggered internally at  /pytorch/c10/core/TensorImpl.h:1156.)
  return torch.max_pool2d(input, kernel_size, stride, padding, dilation, ceil_mode)
Out: torch.Size([1, 2, 512, 512])
Traceback (most recent call last):
  File "main.py", line 56, in <module>
    train_model(
  File "main.py", line 41, in train_model
    DeepSeg.initialize_model()
  File "/root/research/deep-segmentation/segmentation/unet/segmentation.py", line 202, in initialize_model
    summary(self.model, (1, 512, 512), device="cpu")
  File "/usr/local/lib/python3.8/dist-packages/torchsummary/torchsummary.py", line 72, in summary
    model(*x)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/research/deep-segmentation/segmentation/unet/unet.py", line 385, in forward
    x = module(before_pool, x)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1071, in _call_impl
    result = forward_call(*input, **kwargs)
  File "/root/research/deep-segmentation/segmentation/unet/unet.py", line 263, in forward
    up_layer = self.up(decoder_layer)  # up-convolution/up-sampling
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1071, in _call_impl
    result = forward_call(*input, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/conv.py", line 916, in forward
    return F.conv_transpose2d(
KeyboardInterrupt